import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel

# Sample book data (normally this would be fetched from an API or database)
books = pd.DataFrame({
    "title": ["Book A", "Book B", "Book C"],
    "genre": ["Fiction", "Science Fiction", "Fiction"],
    "author": ["Author X", "Author Y", "Author Z"]
})

# Combine genre and author for feature extraction
books["features"] = books["genre"] + " " + books["author"]

# Vectorize the features
tfidf = TfidfVectorizer(stop_words='english')
tfidf_matrix = tfidf.fit_transform(books["features"])

def recommend_books(user_genres, user_authors):
    user_features = " ".join(user_genres + user_authors)
    user_tfidf = tfidf.transform([user_features])
    cosine_sim = linear_kernel(user_tfidf, tfidf_matrix).flatten()
    indices = cosine_sim.argsort()[-3:][::-1]
    return books["title"].iloc[indices].tolist()

# Example usage:
user_genres = ["Fiction"]
user_authors = ["Author X"]
print(recommend_books(user_genres, user_authors))
